<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020 pig4cloud Authors. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.pig4cloud</groupId>
  <artifactId>pig</artifactId>
  <version>3.8.0</version>
  <packaging>pom</packaging>
  <name>${project.artifactId}</name>
  <url>https://www.pig4cloud.com</url>
  <modules>
    <module>pig-register</module>
    <module>pig-gateway</module>
    <module>pig-auth</module>
    <module>pig-upms</module>
    <module>pig-common</module>
    <module>pig-visual</module>
  </modules>
  <properties>
    <spring-boot-admin.version>3.3.2</spring-boot-admin.version>
    <jaxb.version>4.0.5</jaxb.version>
    <docker.username>username</docker.username>
    <spring-boot.version>3.3.1</spring-boot.version>
    <configuration.version>1.10</configuration.version>
    <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
    <spring-cloud-alibaba.version>2023.0.1.0</spring-cloud-alibaba.version>
    <docker.plugin.version>0.44.0</docker.plugin.version>
    <spring-cloud.version>2023.0.2</spring-cloud.version>
    <aws.version>1.12.675</aws.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <screw.version>0.0.3</screw.version>
    <velocity.tool.version>3.1</velocity.tool.version>
    <jasypt.version>3.0.5</jasypt.version>
    <docker.namespace>pig4cloud</docker.namespace>
    <git.commit.plugin>9.0.0</git.commit.plugin>
    <maven.compiler.source>17</maven.compiler.source>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <docker.registry>registry.cn-shanghai.aliyuncs.com</docker.registry>
    <spring.authorization.version>1.3.1</spring.authorization.version>
    <knife4j.version>3.0.5</knife4j.version>
    <revision>3.8.0</revision>
    <docker.host>http://192.168.0.100:2375</docker.host>
    <captcha.version>2.2.3</captcha.version>
    <maven.compiler.target>17</maven.compiler.target>
    <docker.password>password</docker.password>
    <spring.checkstyle.plugin>0.0.41</spring.checkstyle.plugin>
    <velocity.version>2.3</velocity.version>
    <xxl-job.version>2.4.0</xxl-job.version>
    <swagger.fox.version>3.0.0</swagger.fox.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.pig4cloud</groupId>
        <artifactId>pig-common-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>${spring-cloud-alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.github.ulisesbocchio</groupId>
      <artifactId>jasypt-spring-boot-starter</artifactId>
      <version>${jasypt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-client</artifactId>
      <version>${spring-boot-admin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>${jaxb.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <finalName>${project.name}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <finalName>${project.build.finalName}</finalName>
            <layers>
              <enabled>true</enabled>
            </layers>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker.plugin.version}</version>
          <configuration>
            <dockerHost>${docker.host}</dockerHost>
            <registry>${docker.registry}</registry>
            <authConfig>
              <push>
                <username>${docker.username}</username>
                <password>${docker.password}</password>
              </push>
            </authConfig>
            <images>
              <image>
                <name>${docker.registry}/${docker.namespace}/${project.name}:${project.version}</name>
                <build>
                  <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                </build>
              </image>
            </images>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
          <updatePomFile>true</updatePomFile>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <target>${maven.compiler.target}</target>
          <source>${maven.compiler.source}</source>
          <encoding>UTF-8</encoding>
          <parameters>true</parameters>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <version>${git.commit.plugin}</version>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <phase>initialize</phase>
          </execution>
        </executions>
        <configuration>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
          <includeOnlyProperties>
            <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
            <includeOnlyProperty>^git.commit.(id|message|time).*$</includeOnlyProperty>
          </includeOnlyProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.spring.javaformat</groupId>
        <artifactId>spring-javaformat-maven-plugin</artifactId>
        <version>${spring.checkstyle.plugin}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <inherited>true</inherited>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>cloud</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <nacos.username>nacos</nacos.username>
        <profiles.active>dev</profiles.active>
        <nacos.password>nacos</nacos.password>
      </properties>
    </profile>
    <profile>
      <id>boot</id>
      <modules>
        <module>pig-boot</module>
      </modules>
    </profile>
  </profiles>
</project>
